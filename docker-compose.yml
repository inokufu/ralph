services:
  app:
    build:
      context: .
      target: "${RALPH_IMAGE_BUILD_TARGET:-development}"
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    user: ${DOCKER_USER:-1000}
    image: "${RALPH_IMAGE_NAME:-ralph}:${RALPH_IMAGE_TAG:-development}"
    env_file:
      - .env
    ports:
      - "${RALPH_RUNSERVER_PORT:-8100}:${RALPH_RUNSERVER_PORT:-8100}"
    command:
      - ralph
      - "-v"
      - DEBUG
      - runserver
      - "-b"
      - "${RALPH_RUNSERVER_BACKEND:-es}"
    volumes:
      - .:/app

  # -- backends
  elasticsearch:
    image: elasticsearch:8.1.0
    environment:
      bootstrap.memory_lock: true
      discovery.type: single-node
      xpack.security.enabled: "false"
      cluster.routing.allocation.disk.watermark.low: "2gb"
      cluster.routing.allocation.disk.watermark.high: "1gb"
      cluster.routing.allocation.disk.watermark.flood_stage: "500mb"
      cluster.info.update.interval: "1m"
    ports:
      - "9200:9200"
    mem_limit: 2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: curl --fail http://localhost:9200/_cluster/health?wait_for_status=green || exit 1
      interval: 1s
      retries: 60

  mongo:
    image: mongo:5.0.9
    ports:
      - "27017:27017"
    healthcheck:
      test: mongosh --eval 'db.runCommand("ping").ok' localhost:27017/test --quiet
      interval: 1s
      retries: 60

  clickhouse:
      image: clickhouse/clickhouse-server:23.1.1.3077-alpine
      environment:
          CLICKHOUSE_DB: xapi
          CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      ports:
          - 8123:8123
          - 9000:9000
      # ClickHouse needs to maintain a lot of open files, so they
      # suggest running the container with increased limits:
      # https://hub.docker.com/r/clickhouse/clickhouse-server/#!
      ulimits:
          nofile:
              soft: 262144
              hard: 262144
      healthcheck:
        test:  wget --no-verbose --tries=1 --spider http://0.0.0.0:8123/ping || exit 1
        interval: 1s
        retries: 60

  swift:
    image: kklopfenstein/openstack-swift-keystone-docker
    ports:
      - "49177:8080"
      - "49178:35357"
    environment:
      KS_SWIFT_PUBLIC_URL: http://127.0.0.1:49177
    healthcheck:
        test: curl -s http://127.0.0.1:35357 || exit 1
        interval: 1s
        retries: 60

  # -- cozystack backend for testing
  cozy-stack:
    image: cozy/cozy-stack:latest
    environment:
      COZY_HOST: 0.0.0.0
      COZY_ADMIN_HOST: 0.0.0.0
      COZY_ADMIN_PASSPHRASE: "password"
      COUCHDB_HOST: cozy-stack-couchdb
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: password 
      COZY_COUCHDB_URL: http://admin:password@cozy-stack-couchdb:5984 
      COZY_FS_URL: file:///var/lib/cozy 
    volumes:
      - ./cozy-config:/etc/cozy/
    ports:
      - 8080:8080
      - 6060:6060
    networks: 
      default:
        aliases:
          - cozy.ralph-cozy-stack-1
      cozy-stack:
    depends_on:
      - cozy-stack-couchdb
    command: /etc/cozy/startup.sh

  cozy-stack-couchdb:
    image: couchdb:latest
    environment: 
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: password 
    ports:
      - 5984:5984
    networks: 
      - cozy-stack
    healthcheck:
      test: curl --fail http://127.0.0.1:5984/_utils/#verifyinstall || exit 1
      interval: 1s
      retries: 60

networks:
  cozy-stack:
    driver: bridge